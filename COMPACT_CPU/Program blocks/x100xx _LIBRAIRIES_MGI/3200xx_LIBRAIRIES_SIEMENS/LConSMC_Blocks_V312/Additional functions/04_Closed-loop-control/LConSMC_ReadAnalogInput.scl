FUNCTION_BLOCK "LConSMC_ReadAnalogInput"
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR_INPUT 
      set : Bool := FALSE;
      x : Word;
      maxValue : LReal;
      base : LReal := 16384.0;
      setValue : LReal := 0.0;
      smoothingTime : LReal := 100.0;
      tCycle : Real;
   END_VAR

   VAR_OUTPUT 
      error : Bool := FALSE;
      errorID : DWord := 16#0000_0000;
      y : LReal;
   END_VAR

   VAR 
      statX : LReal := 0.0;
      statTmax : LReal;
      statXkm1 : LReal;
      statYkm1 : LReal;
      statFirstRun : Bool := TRUE;
      statY : LReal := 0.0;
   END_VAR

   VAR_TEMP 
      tmpDenom : LReal;
      tmpEnum : LReal;
   END_VAR

   VAR CONSTANT 
      UNIT_ID : DWord := 16#1109_0000;
      MAX_SMOOTHING : Real := 5000.0;
      NO_ERROR : DWord := 16#0000_0000;
   END_VAR


BEGIN
	//------------------------------------------------------------------------------------------------------------------------
	//SIEMENS DF FA PMA APC / Mumbai,India | Erlangen, Germany
	//------------------------------------------------------------------------------------------------------------------------
	//name          : ReadAnalogInput
	//functionality : Analog input evaluation with PT1 filter
	//assignment    : OB3x (cyclic interupt), OB6x (synchronous operation)
	//library       : LCon
	//------------------------------------------------------------------------------------------------------------------------
	//change log table:
	//version   date          expert in charge              changes applied
	//V1.0      27.07.2012    APC GMC group                 Creation
	//V1.1      16.08.2013    APC ERLF                        Bugfix:
	//                                                      - replace word_to_real with convertion
	//                                                      word_to_int and int_to_real
	//V1.2      17.11.2016    APC ERL                       adapted to styleguide; warning "variable might not be initialized" removed
	//========================================================================================================================
	
	IF (#statFirstRun) THEN// only at the first Run       
	    #statFirstRun := FALSE;
	    #statXkm1 := 0.0;
	END_IF;
	
	#error := #base = 0.0 OR (#tCycle = 0.0);
	
	IF (#error) THEN
	    IF (#tCycle = 0.0) THEN
	        #errorID := #UNIT_ID OR "LCON_ERROR_CYCLE_TIME_ZERO";                                       // FB NOT running IN cyclic task (81)
	    END_IF;
	    IF #base = 0.0 THEN
	        #errorID := #UNIT_ID OR "LCON_ERROR_INVALID_CONFIGURATION";                              // Scaling base invalid
	    END_IF;
	ELSE
	    #errorID := #NO_ERROR;
	END_IF;
	
	IF (NOT #error) THEN                                                         // execute code if below error priority 1
	    #statX := LIMIT(MN := -2.0 * #maxValue,
	                    IN := (INT_TO_REAL(WORD_TO_INT(#x)) / #base) * #maxValue,
	                    MX := 2.0 * #maxValue);
	    IF (#smoothingTime <= 0.0) THEN                                          // Filter input
	        #statY := #statX;
	    ELSE
	        #statTmax := 2.0 * LIMIT(MN := #tCycle,
	                                 IN := #smoothingTime,
	                                 MX := #MAX_SMOOTHING);
	        IF (#set) THEN
	            #statY := #setValue;
	            #statXkm1 := #setValue;
	        ELSE
	            #tmpEnum := #statTmax - #tCycle;
	            #tmpDenom := #statTmax + #tCycle;
	            
	            #statY := (#tmpEnum * #statYkm1 + #tCycle * (#statX + #statXkm1)) / #tmpDenom;
	            #statXkm1 := #statX;                                                   //Xkm1 updated
	        END_IF;
	        #statYkm1 := #statY;                                                           //Ykm1 updated
	    END_IF;
	ELSE
	    #statY := 0.0;
	END_IF;
	
	// set outputs
	#y := #statY;
	
END_FUNCTION_BLOCK

